// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model AcademicSemester{
  id String @id @default(uuid())
  year Int
  title String
  code String
  students Student[]
  startMonth String
  endMonth String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("academic_semesters")
}

model AcademicFaculty{
  id String @id @default(uuid())
  title String
  academicDepartMents AcademicDepartment[]
  students Student[]
  faculties Faculty[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("academic_faculty")
}
model AcademicDepartment{
  id String @id @default(uuid())
  title String

  students Student[]
  faculties Faculty[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt


  academicFacultyId String
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])



  @@map("academic_department")
}

model Student{
  id String @id @default(uuid())
  studentId String
  firstName String
  middleName String
  lastName String
  profileImage String
  email String
  contactNo String
  gender String
  bloodGroup String


  academicSemesterId String
  academicSemester AcademicSemester @relation(fields: [academicSemesterId],references: [id])


  academicFacultyId String
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])

  academicDepartmentId String
  academicDepartment AcademicDepartment @relation(fields: [academicDepartmentId],references: [id])


  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("students")
}
model Faculty{
  id String @id @default(uuid())
  facultyId String
  firstName String
  middleName String
  lastName String
  profileImage String
  email String
  contactNo String
  gender String
  bloodGroup String
  designation String

   academicFacultyId String
  academicFaculty AcademicFaculty @relation(fields: [academicFacultyId],references: [id])

  academicDepartmentId String
  academicDepartment AcademicDepartment @relation(fields: [academicDepartmentId],references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("faculties")
}